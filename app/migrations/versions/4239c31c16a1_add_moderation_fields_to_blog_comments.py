"""Add moderation fields to blog_comments

Revision ID: 4239c31c16a1
Revises: 
Create Date: 2025-09-17 20:52:17.498824

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4239c31c16a1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('benefit_items', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('benefit_items_section_id_fkey'), type_='foreignkey')
        batch_op.drop_column('section_id')
        batch_op.drop_column('image')
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('blog_comments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('moderation_reason', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('moderated_by', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('moderated_at', sa.DateTime(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['moderated_by'], ['id'])

    with op.batch_alter_table('blog_tags', schema=None) as batch_op:
        batch_op.drop_column('color')

    with op.batch_alter_table('email_logs', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)

    with op.batch_alter_table('email_queue', schema=None) as batch_op:
        batch_op.alter_column('to_name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('html_content',
               existing_type=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('email_templates', schema=None) as batch_op:
        batch_op.alter_column('html_content',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('template_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('email_templates_name_key'), type_='unique')

    with op.batch_alter_table('event_schedule', schema=None) as batch_op:
        batch_op.alter_column('event_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('hero_background',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=200),
               existing_nullable=True)
        batch_op.alter_column('hero_background_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=True)

    with op.batch_alter_table('faqs', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('footer_settings', schema=None) as batch_op:
        batch_op.alter_column('company_title',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('contact_title',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('social_title',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('company_name',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=True)

    with op.batch_alter_table('legal_documents', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.create_unique_constraint(None, ['document_type'])

    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.drop_column('blog_url')
        batch_op.drop_column('blog')
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('sections', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('sections_name_key'), type_='unique')
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('seo_settings', schema=None) as batch_op:
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
        batch_op.alter_column('og_image',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=200),
               existing_nullable=True)

    with op.batch_alter_table('social_links', schema=None) as batch_op:
        batch_op.alter_column('icon',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.drop_column('target')

    with op.batch_alter_table('testimonials', schema=None) as batch_op:
        batch_op.alter_column('member_since',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=100),
               existing_nullable=True)

    with op.batch_alter_table('user_group_members', schema=None) as batch_op:
        batch_op.alter_column('member_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'user'::character varying"))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=True)

    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('group_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('users_email_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_role'), ['role'], unique=False)
        batch_op.drop_column('is_admin')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_users_role'))
        batch_op.drop_index(batch_op.f('ix_users_is_active'))
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_unique_constraint(batch_op.f('users_email_key'), ['email'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.alter_column('group_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)

    with op.batch_alter_table('user_group_members', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('member_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'user'::character varying"))

    with op.batch_alter_table('testimonials', schema=None) as batch_op:
        batch_op.alter_column('member_since',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)

    with op.batch_alter_table('social_links', schema=None) as batch_op:
        batch_op.add_column(sa.Column('target', sa.VARCHAR(length=20), server_default=sa.text("'_blank'::character varying"), autoincrement=False, nullable=True))
        batch_op.alter_column('icon',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)

    with op.batch_alter_table('seo_settings', schema=None) as batch_op:
        batch_op.alter_column('og_image',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)

    with op.batch_alter_table('sections', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint(batch_op.f('sections_name_key'), ['name'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('menu_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('blog', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('blog_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True))

    with op.batch_alter_table('legal_documents', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('footer_settings', schema=None) as batch_op:
        batch_op.alter_column('company_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('social_title',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('contact_title',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('company_title',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)

    with op.batch_alter_table('faqs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))

    with op.batch_alter_table('event_schedule', schema=None) as batch_op:
        batch_op.alter_column('hero_background_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('hero_background',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('event_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('email_templates', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('email_templates_name_key'), ['name'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('template_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('html_content',
               existing_type=sa.TEXT(),
               nullable=False)

    with op.batch_alter_table('email_queue', schema=None) as batch_op:
        batch_op.alter_column('html_content',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('to_name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)

    with op.batch_alter_table('email_logs', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)

    with op.batch_alter_table('blog_tags', schema=None) as batch_op:
        batch_op.add_column(sa.Column('color', sa.VARCHAR(length=7), autoincrement=False, nullable=True))

    with op.batch_alter_table('blog_comments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('moderated_at')
        batch_op.drop_column('moderated_by')
        batch_op.drop_column('moderation_reason')

    with op.batch_alter_table('benefit_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('image', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('section_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('benefit_items_section_id_fkey'), 'sections', ['section_id'], ['id'])

    # ### end Alembic commands ###
