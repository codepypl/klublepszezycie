"""add_import_container_system

Revision ID: 1ba750811cb7
Revises: dd80820288f3
Create Date: 2025-10-02 22:32:21.259786

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1ba750811cb7'
down_revision = 'dd80820288f3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('email_click_tracking', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_email_click_tracking_click_token'))
        batch_op.drop_index(batch_op.f('ix_email_click_tracking_created_at'))

    op.drop_table('email_click_tracking')
    with op.batch_alter_table('attendance_confirmations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_attendance_confirmations_confirmation_token'))
        batch_op.drop_index(batch_op.f('ix_attendance_confirmations_created_at'))

    op.drop_table('attendance_confirmations')
    with op.batch_alter_table('crm_contacts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('import_file_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'crm_import_files', ['import_file_id'], ['id'], ondelete='SET NULL')

    with op.batch_alter_table('crm_import_files', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('crm_import_files', schema=None) as batch_op:
        batch_op.drop_column('is_active')

    with op.batch_alter_table('crm_contacts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('import_file_id')

    op.create_table('attendance_confirmations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('email_log_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('confirmation_token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('confirmed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['email_log_id'], ['email_logs.id'], name=op.f('attendance_confirmations_email_log_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['event_id'], ['event_schedule.id'], name=op.f('attendance_confirmations_event_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('attendance_confirmations_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('attendance_confirmations_pkey'))
    )
    with op.batch_alter_table('attendance_confirmations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_attendance_confirmations_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_attendance_confirmations_confirmation_token'), ['confirmation_token'], unique=True)

    op.create_table('email_click_tracking',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('email_log_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('click_token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('link_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('original_url', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('clicked_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('utm_source', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('utm_campaign', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('utm_medium', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['email_log_id'], ['email_logs.id'], name=op.f('email_click_tracking_email_log_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['event_id'], ['event_schedule.id'], name=op.f('email_click_tracking_event_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('email_click_tracking_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('email_click_tracking_pkey'))
    )
    with op.batch_alter_table('email_click_tracking', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_email_click_tracking_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_email_click_tracking_click_token'), ['click_token'], unique=True)

    # ### end Alembic commands ###
