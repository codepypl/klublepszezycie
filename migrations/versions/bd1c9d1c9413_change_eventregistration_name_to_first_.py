"""Change EventRegistration name to first_name for consistency

Revision ID: bd1c9d1c9413
Revises: d8ba4bfce384
Create Date: 2025-09-18 15:25:18.142224

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bd1c9d1c9413'
down_revision = 'd8ba4bfce384'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('event_registrations', schema=None) as batch_op:
        # First add the new column as nullable
        batch_op.add_column(sa.Column('first_name', sa.String(length=100), nullable=True))
    
    # Copy data from name to first_name
    connection = op.get_bind()
    connection.execute(
        "UPDATE event_registrations SET first_name = name WHERE name IS NOT NULL"
    )
    
    # Now make first_name NOT NULL and drop the old column
    with op.batch_alter_table('event_registrations', schema=None) as batch_op:
        batch_op.alter_column('first_name', nullable=False)
        batch_op.drop_column('name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('event_registrations', schema=None) as batch_op:
        # First add the old column as nullable
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    
    # Copy data from first_name to name
    connection = op.get_bind()
    connection.execute(
        "UPDATE event_registrations SET name = first_name WHERE first_name IS NOT NULL"
    )
    
    # Now make name NOT NULL and drop the new column
    with op.batch_alter_table('event_registrations', schema=None) as batch_op:
        batch_op.alter_column('name', nullable=False)
        batch_op.drop_column('first_name')

    # ### end Alembic commands ###
