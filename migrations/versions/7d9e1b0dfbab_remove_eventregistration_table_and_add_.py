"""Remove EventRegistration table and add UserHistory and Stats tables

Revision ID: 7d9e1b0dfbab
Revises: 61639eea677a
Create Date: 2025-09-19 01:55:10.027799

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7d9e1b0dfbab'
down_revision = '61639eea677a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event_registrations')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_registrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('wants_club_news', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('notification_preferences', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event_schedule.id'], name=op.f('event_registrations_event_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('event_registrations_pkey'))
    )
    # ### end Alembic commands ###
