#!/usr/bin/env python3
"""
Skrypt do tworzenia podstawowych grup u≈ºytkownik√≥w
"""
import os
import sys
from datetime import datetime

# Dodaj ≈õcie≈ºkƒô do aplikacji
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app
from models import db, UserGroup, UserGroupMember, User

def create_groups():
    """Tworzy podstawowe grupy u≈ºytkownik√≥w"""
    groups = [
        {
            'name': 'Cz≈Çonkowie klubu',
            'description': 'Grupa cz≈Çonk√≥w klubu Lepsze ≈ªycie',
            'group_type': 'club_members'
        },
        {
            'name': 'Wszyscy u≈ºytkownicy',
            'description': 'Grupa wszystkich zarejestrowanych u≈ºytkownik√≥w',
            'group_type': 'all_users'
        }
    ]
    
    created = 0
    for group_data in groups:
        # Sprawd≈∫ czy grupa ju≈º istnieje
        existing = UserGroup.query.filter_by(name=group_data['name']).first()
        
        if not existing:
            group = UserGroup(
                name=group_data['name'],
                description=group_data['description'],
                group_type=group_data['group_type'],
                is_active=True
            )
            
            db.session.add(group)
            created += 1
            print(f"‚úÖ Utworzono grupƒô: {group_data['name']}")
        else:
            print(f"‚ö†Ô∏è  Grupa ju≈º istnieje: {group_data['name']}")
    
    db.session.commit()
    
    # Dodaj u≈ºytkownik√≥w do grup
    add_users_to_groups()
    
    print(f"\nüéâ Utworzono {created} nowych grup u≈ºytkownik√≥w")

def add_users_to_groups():
    """Dodaje u≈ºytkownik√≥w do odpowiednich grup"""
    try:
        # Grupa "Wszyscy u≈ºytkownicy"
        all_users_group = UserGroup.query.filter_by(name='Wszyscy u≈ºytkownicy').first()
        if all_users_group:
            # Pobierz wszystkich aktywnych u≈ºytkownik√≥w
            users = User.query.filter_by(is_active=True).all()
            
            for user in users:
                # Sprawd≈∫ czy ju≈º jest w grupie
                existing = UserGroupMember.query.filter_by(
                    group_id=all_users_group.id,
                    user_id=user.id
                ).first()
                
                if not existing:
                    member = UserGroupMember(
                        group_id=all_users_group.id,
                        user_id=user.id,
                        email=user.email,
                        name=user.name
                    )
                    db.session.add(member)
            
            # Aktualizuj liczbƒô cz≈Çonk√≥w
            all_users_group.member_count = UserGroupMember.query.filter_by(
                group_id=all_users_group.id, 
                is_active=True
            ).count()
            
            print(f"‚úÖ Dodano {all_users_group.member_count} u≈ºytkownik√≥w do grupy 'Wszyscy u≈ºytkownicy'")
        
        # Grupa "Cz≈Çonkowie klubu"
        club_members_group = UserGroup.query.filter_by(name='Cz≈Çonkowie klubu').first()
        if club_members_group:
            # Pobierz wszystkich cz≈Çonk√≥w klubu
            club_members = User.query.filter_by(club_member=True, is_active=True).all()
            
            for user in club_members:
                # Sprawd≈∫ czy ju≈º jest w grupie
                existing = UserGroupMember.query.filter_by(
                    group_id=club_members_group.id,
                    user_id=user.id
                ).first()
                
                if not existing:
                    member = UserGroupMember(
                        group_id=club_members_group.id,
                        user_id=user.id,
                        email=user.email,
                        name=user.name
                    )
                    db.session.add(member)
            
            # Aktualizuj liczbƒô cz≈Çonk√≥w
            club_members_group.member_count = UserGroupMember.query.filter_by(
                group_id=club_members_group.id, 
                is_active=True
            ).count()
            
            print(f"‚úÖ Dodano {club_members_group.member_count} u≈ºytkownik√≥w do grupy 'Cz≈Çonkowie klubu'")
        
        db.session.commit()
        
    except Exception as e:
        print(f"‚ùå B≈ÇƒÖd dodawania u≈ºytkownik√≥w do grup: {str(e)}")

def main():
    """G≈Ç√≥wna funkcja"""
    print("Tworzenie podstawowych grup u≈ºytkownik√≥w...")
    
    try:
        app = create_app()
        
        with app.app_context():
            create_groups()
            
    except Exception as e:
        print(f"‚ùå B≈ÇƒÖd: {str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    main()




